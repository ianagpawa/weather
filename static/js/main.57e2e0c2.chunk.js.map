{"version":3,"sources":["actions/API.js","actions/weather.js","reducers/reducers.js","configureStore.js","constants/utils.js","components/Cards.js","components/CurrentWeather.js","components/ForecastWeather.js","components/Home.js","containers/AsyncApp.js","containers/Root.tsx","index.tsx"],"names":["getRequest","params","type","city","units","fetchFunc","fetchSuccessFunc","fetchFailureFunc","dispatch","fetch","getUrl","then","response","json","catch","err","fetchCurrentWeather","fetchCurrentWeatherSuccess","payload","fetchCurrentWeatherFailure","fetchForecastWeather","fetchForecastWeatherSuccess","fetchForecastWeatherFailure","getCurrentWeather","getForecastWeather","rootReducer","combineReducers","currentWeatherDetails","state","action","forecastWeatherDetails","list","filter","weather","indexOf","todayForecastWeatherDetails","slice","loggerMiddleware","createLogger","getFormattedDate","date","format","moment","getDayName","getShortDate","Cards","this","props","map","day","i","key","dt_txt","temp","parseInt","main","description","url","icon","dayName","hour","dayOrText","shortDate","className","src","Component","CurrentWeather","name","ForecastWeather","Home","href","target","faGithub","faLinkedinIn","faEmpire","faCode","Date","getFullYear","AsyncApp","prevProps","preloadedState","connect","bindActionCreators","store","createStore","applyMiddleware","thunkMiddleware","Root","render","document","getElementById"],"mappings":"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","file":"static/js/main.57e2e0c2.chunk.js","sourcesContent":["import fetch from 'cross-fetch';\r\n\r\nfunction getUrl(params) {\r\n    const {\r\n        type,\r\n        city,\r\n        units\r\n    } = params;\r\n    return `https://api.openweathermap.org/data/2.5/${type}?q=${city}&units=${units}&appid=8a4604e1c9724c6c163653f91c504862`;\r\n}\r\n\r\nexport const getRequest = (params)  => {\r\n    const {\r\n        type,\r\n        city,\r\n        units,\r\n        fetchFunc,\r\n        fetchSuccessFunc,\r\n        fetchFailureFunc\r\n    } = params;\r\n    return dispatch => {\r\n      dispatch(fetchFunc());\r\n      return fetch(getUrl({type, city, units}))\r\n        .then(response => response.json() )\r\n        .then(json => dispatch(fetchSuccessFunc(json)) )\r\n        .catch(err => dispatch(fetchFailureFunc(err)));\r\n    }\r\n}\r\n","\r\n\r\nimport { getRequest } from './API';\r\n\r\nexport const FETCH_CURRENT_WEATHER = `FETCH_CURRENT_WEATHER`;\r\nexport const FETCH_CURRENT_WEATHER_SUCCESS = `FETCH_CURRENT_WEATHER_SUCCESS`;\r\nexport const FETCH_CURRENT_WEATHER_FAILURE = `FETCH_CURRENT_WEATHER_FAILURE`;\r\nexport const FETCH_FORECAST_WEATHER = `FETCH_FORECAST_WEATHER`;\r\nexport const FETCH_FORECAST_WEATHER_SUCCESS = `FETCH_FORECAST_WEATHER_SUCCESS`;\r\nexport const FETCH_FORECAST_WEATHER_FAILURE = `FETCH_FORECAST_WEATHER_FAILURE`;\r\n\r\nexport function fetchCurrentWeather() {\r\n  return {\r\n    type: FETCH_CURRENT_WEATHER\r\n  };\r\n}\r\n\r\nexport function fetchCurrentWeatherSuccess(payload) {\r\n  return {\r\n    type: FETCH_CURRENT_WEATHER_SUCCESS,\r\n    payload\r\n  };\r\n}\r\n\r\nexport function fetchCurrentWeatherFailure(payload) {\r\n  return {\r\n    type: FETCH_CURRENT_WEATHER_FAILURE,\r\n    payload\r\n  };\r\n}\r\n\r\nexport function fetchForecastWeather() {\r\n  return {\r\n    type: FETCH_FORECAST_WEATHER\r\n  };\r\n}\r\n\r\nexport function fetchForecastWeatherSuccess(payload) {\r\n  return {\r\n    type: FETCH_FORECAST_WEATHER_SUCCESS,\r\n    payload\r\n  };\r\n}\r\n\r\nexport function fetchForecastWeatherFailure(payload) {\r\n  return {\r\n    type: FETCH_FORECAST_WEATHER_FAILURE,\r\n    payload\r\n  };\r\n}\r\n\r\nexport function getCurrentWeather(\r\n  city = 'New York',\r\n  units = 'imperial'\r\n) {\r\n  const params = {\r\n    type: 'weather',\r\n    city,\r\n    units,\r\n    fetchFunc: fetchCurrentWeather,\r\n    fetchSuccessFunc: fetchCurrentWeatherSuccess,\r\n    fetchFailureFunc: fetchCurrentWeatherFailure\r\n  };\r\n  return getRequest(params);\r\n}\r\n\r\nexport function getForecastWeather(\r\n  city = 'New York',\r\n  units = 'imperial'\r\n) {\r\n  const params = {\r\n    type: 'forecast',\r\n    city,\r\n    units,\r\n    fetchFunc: fetchForecastWeather,\r\n    fetchSuccessFunc: fetchForecastWeatherSuccess,\r\n    fetchFailureFunc: fetchForecastWeatherFailure\r\n  };\r\n  return getRequest(params);\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport {\r\n  FETCH_CURRENT_WEATHER_SUCCESS,\r\n  FETCH_FORECAST_WEATHER_SUCCESS,\r\n} from '../actions/weather';\r\n\r\nfunction currentWeatherDetails(state = {}, action) {\r\n  switch (action.type) {\r\n    case FETCH_CURRENT_WEATHER_SUCCESS:\r\n      return { \r\n        ...state, \r\n        ...action.payload \r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction forecastWeatherDetails(state = [], action) {\r\n  switch (action.type) {\r\n    case FETCH_CURRENT_WEATHER_SUCCESS:\r\n      return [\r\n        action.payload,\r\n        ...state,\r\n      ];\r\n    case FETCH_FORECAST_WEATHER_SUCCESS:\r\n      return [\r\n        ...state,\r\n        ...action.payload.list.filter(weather => {\r\n          // get weather at noon of each day.\r\n            return weather['dt_txt'].indexOf('12:00:00') > -1;\r\n        })\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction todayForecastWeatherDetails(state = [], action) {\r\n  switch (action.type) {\r\n    case FETCH_FORECAST_WEATHER_SUCCESS:\r\n      return [\r\n        ...state,\r\n        ...action.payload.list.slice(0,6)\r\n      ]\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  currentWeatherDetails,\r\n  forecastWeatherDetails,\r\n  todayForecastWeatherDetails\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { createLogger } from 'redux-logger'\r\nimport rootReducer from './reducers/reducers'\r\n\r\nconst loggerMiddleware = createLogger()\r\n\r\nexport default function configureStore(preloadedState) {\r\n  return createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    applyMiddleware(thunkMiddleware, loggerMiddleware)\r\n  )\r\n}","import moment from \"moment\"\r\n\r\nconst getFormattedDate = (date, format) => { return moment(date).format(format); }\r\nexport const getDayName = (date) => { return getFormattedDate(date, 'dddd'); }\r\nexport const getHour = (date) => { return getFormattedDate(date, 'LT'); }\r\nexport const getShortDate = (date) => { return getFormattedDate(date, 'Do MMM'); }\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { \r\n\tgetDayName,\r\n\tgetHour,\r\n\tgetShortDate\r\n } from '../constants/utils';\r\nexport default class Cards extends Component {\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tforecastWeatherDetails,\r\n\t\t\ttodayForecastWeatherDetails\r\n\t\t} =  this.props;\r\n\t\treturn (forecastWeatherDetails || todayForecastWeatherDetails).map((day, i) => {\r\n\t\t\tconst key = forecastWeatherDetails ? `forecast${i}` : `today${i}`;\r\n\t\t\tconst weather = day && day.weather && day.weather[0];\r\n\t\t\tconst { dt_txt } = day;\r\n\t\t\tconst temp = parseInt(day && day.main && day.main.temp);\r\n\t\t\tconst description = weather.main;\r\n\t\t\tconst url = `https://openweathermap.org/img/wn/${weather.icon }@2x.png`;\r\n\t\t\tconst dayName = getDayName(dt_txt);\r\n\t\t\tconst hour = getHour(dt_txt);\r\n\t\t\tconst dayOrText = key.indexOf('forecast') !== -1 ? dayName : hour;\r\n\t  \t\tconst shortDate = key.indexOf('forecast') !== -1 ? getShortDate(dt_txt) : null;\r\n\t\t\treturn (\r\n\t\t\t\t<div key={key} className=\"forecast\">\r\n\t\t\t\t\t<div className=\"forecast-header\">\r\n\t\t\t\t\t\t<div className=\"day\">{dayOrText}</div>\r\n\t\t\t\t\t\t<div>{shortDate}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"forecast-content\">\r\n\t\t\t\t\t\t<div className=\"forecast-icon\">\r\n\t\t\t\t\t\t\t<img src={url} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"description\">{description}</div>\r\n\t\t\t\t\t\t<div className=\"degree\">{temp}<sup>o</sup>F</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nCards.propTypes = {\r\n\tforecastWeatherDetails: PropTypes.array,\r\n\ttodayForecastWeatherDetails: PropTypes.array\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Cards from './Cards';\r\nimport { getDayName, getShortDate } from '../constants/utils';\r\n\r\nexport default class CurrentWeather extends Component {\r\n\tconstructor(props) { super(props); }\r\n  render() {\r\n\t  const {\r\n\t\tcurrentWeatherDetails,\r\n\t\ttodayForecastWeatherDetails\r\n\t  } = this.props;\r\n\t  const temp = parseInt(currentWeatherDetails && currentWeatherDetails.main && currentWeatherDetails.main.temp);\r\n\t  const weather = currentWeatherDetails && currentWeatherDetails.weather && currentWeatherDetails.weather[0];\r\n\t  const url = `https://openweathermap.org/img/wn/${weather && weather.icon }@2x.png`;\r\n\t  const description = weather && weather.main;\r\n\t  const { \r\n\t\t  dt_txt,\r\n\t\t  name,\r\n\t\t} = currentWeatherDetails;\r\n\t  const day = getDayName(dt_txt);\r\n\t  const shortDate = getShortDate(dt_txt);\r\n\r\n\t  return (\r\n\t\t\t<div className=\"forecast-table\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"forecast-container\">\r\n\t\t\t\t\t\t<div className=\"today forecast\">\r\n\t\t\t\t\t\t\t<div className=\"forecast-header\">\r\n\t  \t\t\t\t\t\t\t<div className=\"day\">{day}</div>\r\n\t\t\t\t\t\t\t\t{/* <div className=\"\">{name}</div> */}\r\n\t  \t\t\t\t\t\t\t<div className=\"date\">{shortDate}</div>\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t<div className=\"forecast-content\">\r\n\t  \t\t\t\t\t\t\t<div className=\"location\">{name}</div>\r\n\t\t\t\t\t\t\t\t<div className=\"degree\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"num\">{temp}<sup>o</sup>F</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"forecast-icon\">\r\n\t\t\t\t\t\t\t\t\t\t<img src={url} />\r\n\t  \t\t\t\t\t\t\t\t\t<p>{description}</p>\r\n\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Cards \r\n\t\t\t\t\t\t\ttodayForecastWeatherDetails={todayForecastWeatherDetails}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n        );\r\n    }\r\n}\r\n\r\nCurrentWeather.propTypes = {\r\n\tcurrentWeatherDetails: PropTypes.object.isRequired,\r\n\ttodayForecastWeatherDetails: PropTypes.array.isRequired\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Cards from './Cards';\r\n\r\nexport default class ForecastWeather extends Component {\r\n\tconstructor(props) { super(props); }\r\n\trender() {\r\n\t\tconst { forecastWeatherDetails } = this.props;\r\n\t\treturn (\r\n\t\t\t\t<div className=\"forecast-table forecast-div\">\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<div className=\"forecast-container\">\r\n\t\t\t\t\t\t\t<Cards \r\n\t\t\t\t\t\t\t\tforecastWeatherDetails={forecastWeatherDetails}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n}\r\n\r\nForecastWeather.propTypes = {\r\n\tforecastWeatherDetails: PropTypes.array.isRequired\r\n}\r\n","import React, { Component } from 'react'\r\nimport CurrentWeather from './CurrentWeather';\r\nimport ForecastWeather from './ForecastWeather';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub, faLinkedinIn, faEmpire } from '@fortawesome/free-brands-svg-icons'\r\nimport { faCode } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default class Home extends Component {\r\n\tconstructor(props) { super(props); }\r\n  render() {\r\n\t  const {\r\n\t\tcurrentWeatherDetails,\r\n\t\tforecastWeatherDetails,\r\n\t\ttodayForecastWeatherDetails\r\n\t  } = this.props;\r\n      return (\r\n        <div className=\"site-content\">\r\n\t\t\t<div className=\"site-header\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"branding\">\r\n\t\t\t\t\t\t<div className=\"logo-type\">\r\n\t\t\t\t\t\t\t<h1 className=\"site-title\">Weather Forecast</h1>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<CurrentWeather \r\n\t\t\t\tcurrentWeatherDetails={currentWeatherDetails}\r\n\t\t\t\ttodayForecastWeatherDetails={todayForecastWeatherDetails} \r\n\t\t\t/>\r\n\r\n\t\t\t<ForecastWeather forecastWeatherDetails={forecastWeatherDetails} />\r\n\r\n\t\t\t<footer className=\"site-footer\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-md-6 col-md-offset-6\">\r\n\t\t\t\t\t\t\t<div className=\"social-links col-md-offset-6\">\r\n\t\t\t\t\t\t\t\t<a href=\"https://github.com/ianagpawa\" target=\"_blank\"><FontAwesomeIcon  icon={faGithub} /></a>\r\n\t\t\t\t\t\t\t\t<a href=\"https://www.linkedin.com/in/ianagpawa\" target=\"_blank\"><FontAwesomeIcon  icon={faLinkedinIn} /></a>\r\n\t\t\t\t\t\t\t\t<a href=\"https://ianagpawa.github.io/portfolio\" target=\"_blank\"><FontAwesomeIcon  icon={faEmpire} /></a>\r\n\t\t\t\t\t\t\t\t<a href=\"https://github.com/ianagpawa/weather\" target=\"_blank\"><FontAwesomeIcon  icon={faCode} /></a>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p className=\"colophon\">Copyright &copy;{new Date().getFullYear()} <span className=\"ian\">Ian Agpawa</span>. Designed by Themezy. All rights reserved</p>\r\n\t\t\t\t</div>\r\n\t\t\t</footer>\r\n\t\t</div>\r\n      );\r\n  }\r\n}\r\n\r\nHome.propTypes = {\r\n\tcurrentWeatherDetails: PropTypes.object,\r\n\tforecastWeatherDetails: PropTypes.array,\r\n\ttodayForecastWeatherDetails: PropTypes.array\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport Home from '../components/Home';\r\nimport {\r\n  getCurrentWeather,\r\n  getForecastWeather\r\n} from '../actions/weather';\r\n\r\nclass AsyncApp extends Component {\r\n  constructor(props) { super(props); }\r\n\r\n  componentDidMount() {\r\n    const { \r\n      getCurrentWeather,\r\n      getForecastWeather\r\n    } = this.props;\r\n    getCurrentWeather();\r\n    getForecastWeather();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) { }\r\n\r\n  render() {\r\n    const { \r\n      currentWeatherDetails,\r\n      forecastWeatherDetails,\r\n      todayForecastWeatherDetails\r\n    } = this.props;\r\n    return (\r\n      <Home \r\n        currentWeatherDetails={currentWeatherDetails}\r\n        forecastWeatherDetails={forecastWeatherDetails}\r\n        todayForecastWeatherDetails={todayForecastWeatherDetails} \r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nAsyncApp.propTypes = {\r\n  currentWeatherDetails: PropTypes.object,\r\n  forecastWeatherDetails: PropTypes.array,\r\n  todayForecastWeatherDetails: PropTypes.array\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { \r\n    currentWeatherDetails, \r\n    forecastWeatherDetails,\r\n    todayForecastWeatherDetails\r\n  } = state;\r\n  return { \r\n    currentWeatherDetails,\r\n    forecastWeatherDetails,\r\n    todayForecastWeatherDetails\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n  getCurrentWeather,\r\n  getForecastWeather\r\n}, dispatch)\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AsyncApp)","import React, { Component } from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from '../configureStore'\r\nimport AsyncApp from './AsyncApp'\r\n\r\nconst store = configureStore()\r\n\r\nexport default class Root extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <AsyncApp />\r\n      </Provider>\r\n    )\r\n  }\r\n}","import 'babel-polyfill';\r\n\r\nimport React from 'react'\r\nimport { render } from 'react-dom'\r\nimport Root from './containers/Root';\r\nimport './index.scss';\r\n\r\nrender(<Root />, document.getElementById('root'))"],"sourceRoot":""}