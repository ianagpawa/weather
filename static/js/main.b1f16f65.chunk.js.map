{"version":3,"sources":["actions/API.js","actions/weather.js","reducers/reducers.js","configureStore.js","constants/utils.js","components/Cards.js","components/CurrentWeather.js","components/ForecastWeather.js","components/Home.js","containers/AsyncApp.js","containers/Root.tsx","index.tsx"],"names":["getRequest","params","type","city","units","fetchFunc","fetchSuccessFunc","fetchFailureFunc","dispatch","fetch","getUrl","then","response","ok","Error","json","catch","err","fetchCurrentWeather","fetchCurrentWeatherSuccess","payload","fetchCurrentWeatherFailure","fetchForecastWeather","fetchForecastWeatherSuccess","fetchForecastWeatherFailure","getCurrentWeather","getForecastWeather","rootReducer","combineReducers","currentWeatherDetails","state","action","forecastWeatherDetails","list","filter","weather","indexOf","todayForecastWeatherDetails","slice","todayForecastDetails","fetchFailure","loggerMiddleware","createLogger","getFormattedDate","date","format","moment","getDayName","getShortDate","Cards","this","props","map","day","i","key","dt_txt","temp","parseInt","main","description","url","icon","dayName","hour","dayOrText","shortDate","className","src","Component","CurrentWeather","name","ForecastWeather","combined","Home","handleSubmit","bind","event","preventDefault","target","value","errorMessage","data-bg-image","onSubmit","placeholder","href","faGithub","faLinkedinIn","faEmpire","faCode","Date","getFullYear","AsyncApp","prevProps","console","log","preloadedState","connect","bindActionCreators","store","createStore","applyMiddleware","thunkMiddleware","Root","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1f16f65.chunk.js","sourcesContent":["import fetch from 'cross-fetch';\r\n\r\nfunction getUrl(params) {\r\n    const {\r\n        type,\r\n        city,\r\n        units\r\n    } = params;\r\n    return `https://api.openweathermap.org/data/2.5/${type}?q=${city}&units=${units}&appid=8a4604e1c9724c6c163653f91c504862`;\r\n}\r\n\r\nexport const getRequest = (params)  => {\r\n    const {\r\n        type,\r\n        city,\r\n        units,\r\n        fetchFunc,\r\n        fetchSuccessFunc,\r\n        fetchFailureFunc\r\n    } = params;\r\n    return dispatch => {\r\n      dispatch(fetchFunc());\r\n      return fetch(getUrl({type, city, units}))\r\n        .then(response => {\r\n            if(!response.ok) { throw new Error(\"not ok\"); }\r\n            return response.json();\r\n        })\r\n        .then(json => dispatch(fetchSuccessFunc(json)) )\r\n        .catch(err => dispatch(fetchFailureFunc(err)) );\r\n    }\r\n}\r\n","\r\n\r\nimport { getRequest } from './API';\r\n\r\nexport const FETCH_CURRENT_WEATHER = `FETCH_CURRENT_WEATHER`;\r\nexport const FETCH_CURRENT_WEATHER_SUCCESS = `FETCH_CURRENT_WEATHER_SUCCESS`;\r\nexport const FETCH_CURRENT_WEATHER_FAILURE = `FETCH_CURRENT_WEATHER_FAILURE`;\r\nexport const FETCH_FORECAST_WEATHER = `FETCH_FORECAST_WEATHER`;\r\nexport const FETCH_FORECAST_WEATHER_SUCCESS = `FETCH_FORECAST_WEATHER_SUCCESS`;\r\nexport const FETCH_FORECAST_WEATHER_FAILURE = `FETCH_FORECAST_WEATHER_FAILURE`;\r\n\r\nexport function fetchCurrentWeather() {\r\n  return {\r\n    type: FETCH_CURRENT_WEATHER\r\n  };\r\n}\r\n\r\nexport function fetchCurrentWeatherSuccess(payload) {\r\n  return {\r\n    type: FETCH_CURRENT_WEATHER_SUCCESS,\r\n    payload\r\n  };\r\n}\r\n\r\nexport function fetchCurrentWeatherFailure(payload) {\r\n  return {\r\n    type: FETCH_CURRENT_WEATHER_FAILURE,\r\n    payload\r\n  };\r\n}\r\n\r\nexport function fetchForecastWeather() {\r\n  return {\r\n    type: FETCH_FORECAST_WEATHER\r\n  };\r\n}\r\n\r\nexport function fetchForecastWeatherSuccess(payload) {\r\n  return {\r\n    type: FETCH_FORECAST_WEATHER_SUCCESS,\r\n    payload\r\n  };\r\n}\r\n\r\nexport function fetchForecastWeatherFailure(payload) {\r\n  return {\r\n    type: FETCH_FORECAST_WEATHER_FAILURE,\r\n    payload\r\n  };\r\n}\r\n\r\nexport function getCurrentWeather(\r\n  city = 'New York',\r\n  units = 'imperial'\r\n) {\r\n  const params = {\r\n    type: 'weather',\r\n    city,\r\n    units,\r\n    fetchFunc: fetchCurrentWeather,\r\n    fetchSuccessFunc: fetchCurrentWeatherSuccess,\r\n    fetchFailureFunc: fetchCurrentWeatherFailure\r\n  };\r\n  return getRequest(params);\r\n}\r\n\r\nexport function getForecastWeather(\r\n  city = 'New York',\r\n  units = 'imperial'\r\n) {\r\n  const params = {\r\n    type: 'forecast',\r\n    city,\r\n    units,\r\n    fetchFunc: fetchForecastWeather,\r\n    fetchSuccessFunc: fetchForecastWeatherSuccess,\r\n    fetchFailureFunc: fetchForecastWeatherFailure\r\n  };\r\n  return getRequest(params);\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport {\r\n  FETCH_CURRENT_WEATHER_FAILURE,\r\n  FETCH_CURRENT_WEATHER_SUCCESS,\r\n  FETCH_FORECAST_WEATHER_FAILURE,\r\n  FETCH_FORECAST_WEATHER_SUCCESS\r\n} from '../actions/weather';\r\n\r\nfunction currentWeatherDetails(state = {}, action) {\r\n  switch (action.type) {\r\n    case FETCH_CURRENT_WEATHER_SUCCESS:\r\n      return { \r\n        ...action.payload \r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction forecastWeatherDetails(state = [], action) {\r\n  switch (action.type) {\r\n    case FETCH_CURRENT_WEATHER_SUCCESS:\r\n      return [\r\n        action.payload,\r\n      ];\r\n    case FETCH_FORECAST_WEATHER_SUCCESS:\r\n      return [\r\n        ...(action && action.payload && action.payload.list).filter(weather => {\r\n            return weather['dt_txt'].indexOf('12:00:00') > -1;\r\n        })\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction todayForecastWeatherDetails(state = [], action) {\r\n  switch (action.type) {\r\n    case FETCH_FORECAST_WEATHER_SUCCESS:\r\n      return [\r\n        ...action.payload.list.slice(0,6)\r\n      ]\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction todayForecastDetails(state = [], action) {\r\n  switch (action.type) {\r\n    case FETCH_FORECAST_WEATHER_SUCCESS:\r\n      return action.payload.list.slice(0,1);\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nfunction fetchFailure(state = false, action) {\r\n  switch (action.type) {\r\n    case FETCH_FORECAST_WEATHER_FAILURE:\r\n    case FETCH_CURRENT_WEATHER_FAILURE:\r\n      return true;\r\n    case FETCH_CURRENT_WEATHER_SUCCESS:\r\n    case FETCH_FORECAST_WEATHER_SUCCESS:\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  currentWeatherDetails,\r\n  forecastWeatherDetails,\r\n  todayForecastWeatherDetails,\r\n  todayForecastDetails,\r\n  fetchFailure\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { createLogger } from 'redux-logger'\r\nimport rootReducer from './reducers/reducers'\r\n\r\nconst loggerMiddleware = createLogger()\r\n\r\nexport default function configureStore(preloadedState) {\r\n  return createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    applyMiddleware(thunkMiddleware, loggerMiddleware)\r\n  )\r\n}","import moment from \"moment\"\r\n\r\nconst getFormattedDate = (date, format) => { return moment(date).format(format); }\r\nexport const getDayName = (date) => { return getFormattedDate(date, 'dddd'); }\r\nexport const getHour = (date) => { return getFormattedDate(date, 'LT'); }\r\nexport const getShortDate = (date) => { return getFormattedDate(date, 'Do MMM'); }\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { \r\n\tgetDayName,\r\n\tgetHour,\r\n\tgetShortDate\r\n } from '../constants/utils';\r\nexport default class Cards extends Component {\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tforecastWeatherDetails,\r\n\t\t\ttodayForecastWeatherDetails,\r\n\t\t\ttodayForecastDetails\r\n\t\t} =  this.props;\r\n\t\treturn (forecastWeatherDetails || todayForecastWeatherDetails || todayForecastDetails).map((day, i) => {\r\n\t\t\tconst key = forecastWeatherDetails ? `forecast${i}` : `today${i}`;\r\n\t\t\tconst weather = day && day.weather && day.weather[0];\r\n\t\t\tconst { dt_txt } = day;\r\n\t\t\tconst temp = parseInt(day && day.main && day.main.temp);\r\n\t\t\tconst description = weather && weather.main;\r\n\t\t\tconst url = `https://openweathermap.org/img/wn/${weather && weather.icon}@2x.png`;\r\n\t\t\tconst dayName = getDayName(dt_txt);\r\n\t\t\tconst hour = getHour(dt_txt);\r\n\t\t\tconst dayOrText = key.indexOf('forecast') !== -1 ? dayName : hour;\r\n\t  \t\tconst shortDate = key.indexOf('forecast') !== -1 ? getShortDate(dt_txt) : null;\r\n\t\t\treturn (\r\n\t\t\t\t<div key={key} className=\"forecast\">\r\n\t\t\t\t\t<div className=\"forecast-header\">\r\n\t\t\t\t\t\t<div className=\"day\">{dayOrText}</div>\r\n\t\t\t\t\t\t<div>{shortDate}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"forecast-content\">\r\n\t\t\t\t\t\t<div className=\"forecast-icon\">\r\n\t\t\t\t\t\t\t<img src={url} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"description\">{description}</div>\r\n\t\t\t\t\t\t<div className=\"degree\">{temp}<sup>o</sup>F</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nCards.propTypes = {\r\n\tforecastWeatherDetails: PropTypes.array.isRequired,\r\n\ttodayForecastWeatherDetails: PropTypes.array.isRequired,\r\n\ttodayForecastDetails: PropTypes.array.isRequired\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Cards from './Cards';\r\nimport { getDayName, getShortDate } from '../constants/utils';\r\n\r\nexport default class CurrentWeather extends Component {\r\n\tconstructor(props) { super(props); }\r\n  \trender() {\r\n\t  const {\r\n\t\tcurrentWeatherDetails,\r\n\t\ttodayForecastWeatherDetails\r\n\t  } = this.props;\r\n\t  const temp = parseInt(currentWeatherDetails && currentWeatherDetails.main && currentWeatherDetails.main.temp);\r\n\t  const weather = currentWeatherDetails && currentWeatherDetails.weather && currentWeatherDetails.weather[0];\r\n\t  const url = `https://openweathermap.org/img/wn/${weather && weather.icon }@2x.png`;\r\n\t  const description = weather && weather.main;\r\n\t  const { \r\n\t\t  dt_txt,\r\n\t\t  name,\r\n\t\t} = currentWeatherDetails;\r\n\t  const day = getDayName(dt_txt);\r\n\t  const shortDate = getShortDate(dt_txt);\r\n\r\n\t  return (\r\n\t\t\t<div className=\"forecast-table\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"forecast-container\">\r\n\t\t\t\t\t\t<div className=\"today forecast\">\r\n\t\t\t\t\t\t\t<div className=\"forecast-header\">\r\n\t  \t\t\t\t\t\t\t<div className=\"day\">{day}</div>\r\n\t\t\t\t\t\t\t\t{/* <div className=\"\">{name}</div> */}\r\n\t  \t\t\t\t\t\t\t<div className=\"date\">{shortDate}</div>\r\n\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t<div className=\"forecast-content\">\r\n\t  \t\t\t\t\t\t\t<div className=\"location\">{name}</div>\r\n\t\t\t\t\t\t\t\t<div className=\"degree\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"num\">{temp}<sup>o</sup>F</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"forecast-icon\">\r\n\t\t\t\t\t\t\t\t\t\t<img src={url} />\r\n\t  \t\t\t\t\t\t\t\t\t<p>{description}</p>\r\n\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Cards \r\n\t\t\t\t\t\t\ttodayForecastWeatherDetails={todayForecastWeatherDetails}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n        );\r\n    }\r\n}\r\n\r\nCurrentWeather.propTypes = {\r\n\tcurrentWeatherDetails: PropTypes.object.isRequired,\r\n\ttodayForecastWeatherDetails: PropTypes.array.isRequired\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Cards from './Cards';\r\n\r\nexport default class ForecastWeather extends Component {\r\n\tconstructor(props) { super(props); }\r\n\trender() {\r\n\t\tconst { \r\n\t\t\tforecastWeatherDetails,\r\n\t\t\ttodayForecastDetails\r\n\t\t} = this.props;\r\n\t\tconst combined = [...todayForecastDetails, ...forecastWeatherDetails]\r\n\t\treturn (\r\n\t\t\t\t<div className=\"forecast-table forecast-div\">\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<div className=\"forecast-container\">\r\n\t\t\t\t\t\t\t<Cards \r\n\t\t\t\t\t\t\t\tforecastWeatherDetails={combined}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n}\r\n\r\nForecastWeather.propTypes = {\r\n\tforecastWeatherDetails: PropTypes.array.isRequired,\r\n\ttodayForecastDetails: PropTypes.array.isRequired\r\n}\r\n","import React, { Component } from 'react'\r\nimport CurrentWeather from './CurrentWeather';\r\nimport ForecastWeather from './ForecastWeather';\r\n// import ErrorMessage from './ErrorMessage';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub, faLinkedinIn, faEmpire } from '@fortawesome/free-brands-svg-icons'\r\nimport { faCode } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default class Home extends Component {\r\n\tconstructor(props) { \r\n\t\tsuper(props);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this)\r\n\t}\r\n\r\n\thandleSubmit(event) {\r\n\t\tevent.preventDefault();\r\n\t\tconst { \r\n\t\t\tgetCurrentWeather,\r\n\t\t\tgetForecastWeather\r\n\t\t} = this.props;\r\n\t\tgetCurrentWeather(event.target.city.value);\r\n\t\tgetForecastWeather(event.target.city.value);\r\n\t}\r\n\r\n  \trender() {\r\n\t  const {\r\n\t\tcurrentWeatherDetails,\r\n\t\tforecastWeatherDetails,\r\n\t\ttodayForecastWeatherDetails,\r\n\t\ttodayForecastDetails,\r\n\t\tfetchFailure\r\n\t  } = this.props;\r\n\t const errorMessage =  (\r\n\t\t<div className={fetchFailure ? 'container text-red' : 'hidden'}>\r\n\t\t\t<h3>Could not find your city!</h3>\r\n\t\t</div>\r\n\t  )\r\n\r\n      return (\r\n        <div className=\"site-content\">\r\n\t\t\t<div className=\"site-header\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"branding\">\r\n\t\t\t\t\t\t<div className=\"logo-type\">\r\n\t\t\t\t\t\t\t<h1 className=\"site-title\">Weather Forecast</h1>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div className=\"hero\" data-bg-image=\"images/banner.png\">\r\n\t\t\t{errorMessage}\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<form className=\"find-location\" onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t\t<input type=\"text\" name=\"city\" placeholder=\"Search for your city...\"/>\r\n\t\t\t\t\t\t<input type=\"submit\" value=\"Find\" />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<CurrentWeather \r\n\t\t\t\tcurrentWeatherDetails={currentWeatherDetails}\r\n\t\t\t\ttodayForecastWeatherDetails={todayForecastWeatherDetails} \r\n\t\t\t/>\r\n\r\n\t\t\t<ForecastWeather\r\n\t\t\t\ttodayForecastDetails={todayForecastDetails}\r\n\t\t\t\tforecastWeatherDetails={forecastWeatherDetails} \r\n\t\t\t/>\r\n\r\n\t\t\t<footer className=\"site-footer\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-md-6 col-md-offset-6\">\r\n\t\t\t\t\t\t\t<div className=\"social-links col-md-offset-6\">\r\n\t\t\t\t\t\t\t\t<a href=\"https://github.com/ianagpawa\" target=\"_blank\"><FontAwesomeIcon  icon={faGithub} /></a>\r\n\t\t\t\t\t\t\t\t<a href=\"https://www.linkedin.com/in/ianagpawa\" target=\"_blank\"><FontAwesomeIcon  icon={faLinkedinIn} /></a>\r\n\t\t\t\t\t\t\t\t<a href=\"https://ianagpawa.github.io/portfolio\" target=\"_blank\"><FontAwesomeIcon  icon={faEmpire} /></a>\r\n\t\t\t\t\t\t\t\t<a href=\"https://github.com/ianagpawa/weather\" target=\"_blank\"><FontAwesomeIcon  icon={faCode} /></a>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p className=\"colophon\">Copyright &copy;{new Date().getFullYear()} <span className=\"ian\">Ian Agpawa</span>. Designed by Themezy. All rights reserved</p>\r\n\t\t\t\t</div>\r\n\t\t\t</footer>\r\n\t\t</div>\r\n      );\r\n  }\r\n}\r\n\r\nHome.propTypes = {\r\n\tcurrentWeatherDetails: PropTypes.object,\r\n\tforecastWeatherDetails: PropTypes.array,\r\n\ttodayForecastWeatherDetails: PropTypes.array,\r\n\ttodayForecastDetails: PropTypes.array,\r\n\tfetchFailure: PropTypes.bool,\r\n\tgetForecastWeather: PropTypes.func,\r\n\tgetCurrentWeather: PropTypes.func\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport Home from '../components/Home';\r\nimport {\r\n  getCurrentWeather,\r\n  getForecastWeather\r\n} from '../actions/weather';\r\n\r\nclass AsyncApp extends Component {\r\n  constructor(props) { super(props); }\r\n\r\n  componentDidMount() {\r\n    const { \r\n      getCurrentWeather,\r\n      getForecastWeather\r\n    } = this.props;\r\n    getCurrentWeather();\r\n    getForecastWeather();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) { \r\n    console.log('updated')\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      currentWeatherDetails,\r\n      forecastWeatherDetails,\r\n      todayForecastWeatherDetails,\r\n      todayForecastDetails,\r\n      fetchFailure,\r\n      getCurrentWeather,\r\n      getForecastWeather\r\n    } = this.props;\r\n    return (\r\n      <Home \r\n        fetchFailure={fetchFailure}\r\n        getCurrentWeather={getCurrentWeather}\r\n        getForecastWeather={getForecastWeather}\r\n        currentWeatherDetails={currentWeatherDetails}\r\n        forecastWeatherDetails={forecastWeatherDetails}\r\n        todayForecastWeatherDetails={todayForecastWeatherDetails}\r\n        todayForecastDetails={todayForecastDetails}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nAsyncApp.propTypes = {\r\n  currentWeatherDetails: PropTypes.object,\r\n  forecastWeatherDetails: PropTypes.array,\r\n  todayForecastWeatherDetails: PropTypes.array,\r\n  todayForecastDetails: PropTypes.array,\r\n  fetchFailure: PropTypes.bool\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { \r\n    currentWeatherDetails, \r\n    forecastWeatherDetails,\r\n    todayForecastWeatherDetails,\r\n    todayForecastDetails,\r\n    getCurrentWeather,\r\n    getForecastWeather,\r\n    fetchFailure\r\n  } = state;\r\n  return { \r\n    currentWeatherDetails,\r\n    forecastWeatherDetails,\r\n    todayForecastDetails,\r\n    todayForecastWeatherDetails,\r\n    getCurrentWeather,\r\n    getForecastWeather,\r\n    todayForecastDetails,\r\n    fetchFailure\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n  getCurrentWeather,\r\n  getForecastWeather\r\n}, dispatch)\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AsyncApp)","import React, { Component } from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from '../configureStore'\r\nimport AsyncApp from './AsyncApp'\r\n\r\nconst store = configureStore()\r\n\r\nexport default class Root extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <AsyncApp />\r\n      </Provider>\r\n    )\r\n  }\r\n}","import 'babel-polyfill';\r\n\r\nimport React from 'react'\r\nimport { render } from 'react-dom'\r\nimport Root from './containers/Root';\r\nimport './index.scss';\r\n\r\nrender(<Root />, document.getElementById('root'))"],"sourceRoot":""}